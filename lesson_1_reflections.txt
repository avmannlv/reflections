
***GENERAL NOTES***

Version control helps you revert back to previous versions, but may have limitations on time depending on what 
you use.

Git affects all files since the program relies on all files to work.  Any changes to any files can create 
issues so they all need to be tracked.

That was SOOOO not easy.  I still cannot find the option in the new version of GIT to copy and paste, but via 
trial and error, I realized that the center mouse button pastes into git.


***COURSE QUESTIONS***

Q: How might using version control make you more confident to make changes that could break something?
A: because you can always revert back to a previous version.

Q: Now that you have your workspace set up, what do you want to try using Git for? 
A: Version control



***GIT COMMANDS***

- Commit: 	creates a new version of code
- git log: 	shows the different versions of commits done
	- --
- scp: 		stands for secure copy and it allows you to securly copy from one computer to another.
- git checkout: 	sets the repository to a different instance of a commit.
		- add branch name to make that the working branch.
		- git checkout -b new_branch_name to make a new branch, name it and switch to it.
- git init:	initialize a new git repository on a folder.  this does not make a commit, just sets up the files
- ls:		list out all files in current directory. 
- ls -a:	lists even hidden files in a directory
- git status:	shows current status of commit and repo.
- touch:	add text file in current directory.
- rm:		removes files
- git add:	adds files to the staging area which is eventually used to create a commit.
- git diff: compares the files in the working directory and the staging area
	- if used with 2 commits, compares the different between those commits
- git diff --staged: compares the files in the staging area with the last commit
- git branch: 	shows current branches
		- add name after branch to create new branch
		- -d branchname deletes a branch, but all the commits on that branch are still in the history.  Just deletes the label
-git merge branch1 branch2: merge branches
- git remote: shows list of remote repo's setup
	- add NAME_OF_REMOTE URL: adds remote connection to repository.
	- git remote -v: gives fetch and push URL's to use.
- git push REMOTE_NAME LOCAL_REPO NAME: send local repo to server.
- git pull REMOTE_NAME LOCAL_REPO NAME: pull server repo into local enviornment.